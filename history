;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(input-method-history magit-read-rev-history extended-command-history file-name-history search-ring imenu--history-list query-replace-history ido-buffer-history minibuffer-history ido-file-history))
(setq file-name-history '("/home/aby/PROJECT/MeiyouHome/app/js/lottery.js" "/home/aby/PROJECT/MeiyouHome/app/index.html" "/home/aby/PROJECT/MeiyouHome/app/js/index.js" "/home/aby/PROJECT/MeiyouHome/app/index.html" "/home/aby/PROJECT/MeiyouHome/mok/app.js" "/home/aby/PROJECT/MeiyouHome/app/lottery.html" "/home/aby/PROJECT/MeiyouHome/app/index.html" "/home/aby/PROJECT/MeiyouHome/scss/gotit.scss" "/home/aby/PROJECT/MeiyouHome/app/gotit.html" "/home/aby/PROJECT/MeiyouHome/scss/timeout.scss" "/home/aby/PROJECT/MeiyouHome/scss/miss.scss" "/home/aby/PROJECT/MeiyouHome/scss/timeout.scss" "/home/aby/PROJECT/MeiyouHome/app/timeout.html" "/home/aby/PROJECT/MeiyouHome/scss/lottery.scss" "/home/aby/PROJECT/MeiyouHome/scss/index.scss" "/home/aby/PROJECT/MeiyouHome/scss/miss.scss" "/home/aby/PROJECT/MeiyouHome/app/miss.html" "/home/aby/PROJECT/MeiyouHome/scss/lottery.scss" "/home/aby/PROJECT/MeiyouHome/app/js/index.js" "/home/aby/PROJECT/MeiyouHome/mok/app.js" "/home/aby/PROJECT/MeiyouHome/app/js/index.js" "/home/aby/PROJECT/MeiyouHome/scss/index.scss" "/home/aby/PROJECT/MeiyouHome/app/index.html" "/home/aby/PROJECT/MeiyouHome/app/lottery.html" "/home/aby/PROJECT/MeiyouHome/scss/lottery.scss" "/home/aby/PROJECT/MeiyouHome/app/js/gotit.js" "~/PROJECT/MeiyouHome/scss/gotit.scss" "/home/aby/PROJECT/MeiyouHome/scss/collection.scss" "~/PROJECT/MeiyouHome/app/gotit.html" "/home/aby/PROJECT/MeiyouHome/app/miss.html" "/home/aby/PROJECT/MeiyouHome/app/js/index.js" "/home/aby/PROJECT/MeiyouHome/app/lottery.html" "/home/aby/PROJECT/MeiyouHome/app/js/lottery.js" "/home/aby/.emacs.d/snippets/js2-mode/log.yasnippet" "/home/aby/.emacs.d/snippets/js2-mode/log" "/home/aby/.emacs.d/snippets/js2-mode/fn;" "/home/aby/.emacs.d/session.10b88946934acdd785143339207024531100000027050071" "/home/aby/PROJECT/MeiyouHome/app/js/lottery.js" "/home/aby/PROJECT/MeiyouHome/app/lottery.html" "/home/aby/PROJECT/MeiyouHome/app/js/index.js" "/home/aby/PROJECT/MeiyouHome/scss/index.scss" "/home/aby/PROJECT/MeiyouHome/app/js/index.js" "/home/aby/PROJECT/MeiyouHome/scss/timeout.scss" "/home/aby/PROJECT/MeiyouHome/app/timeout.html" "/home/aby/PROJECT/MeiyouHome/scss/miss.scss" "~/PROJECT/MeiyouHome/app/miss.html" "/home/aby/PROJECT/MeiyouHome/scss/miss.html" "/home/aby/PROJECT/MeiyouHome/scss/lottery.scss" "/home/aby/PROJECT/MeiyouHome/app/lottery.html" "/home/aby/PROJECT/MeiyouHome/scss/collection.scss" "/home/aby/PROJECT/MeiyouHome/scss/index.scss" "/home/aby/.emacs.d/snippets/html-mode/c-if" "/home/aby/.emacs.d/snippets/html-mode/html" "/home/aby/PROJECT/MeiyouHome/app/collection.html" "/home/aby/PROJECT/MeiyouHome/app/index.html" "/home/aby/PROJECT/MeiyouHome/scss/main.scss" "/home/aby/PROJECT/MeiyouHome/scss/index.scss" "/home/aby/PROJECT/MeiyouHome/app/index.html" "/home/aby/PROJECT/MeiyouHome/app/scss/main.scss" "/home/aby/PROJECT/MeiyouHome/app/scss/index.scss" "/home/aby/PROJECT/MeiyouHome/app/index.html" "/home/aby/PROJECT/MeiyouHome/package.json" "/home/aby/PROJECT/MeiyouHome/gulpfile.js" "/home/aby/fis-command-i18n/.git/COMMIT_EDITMSG" "/usr/local/lib/node_modules/fis-plus/lib/livereload-target.js" "/usr/local/lib/node_modules/fis-plus/fis-plus.js" "/usr/local/lib/node_modules/fis-plus/bin/fis-plus" "/usr/local/lib/node_modules/fis-plus/fis-plus.js" "/usr/local/lib/node_modules/fis-plus/package.json" "/usr/local/lib/node_modules/fis-plus/fis-plus.js" "/home/aby/fis-command-i18n/i18n.js" "/home/aby/fis-command-server-master/server.js" "/home/aby/MeizuDemo/package.json" "/home/aby/fis-command-i18n/package.json" "/home/aby/.emacs.d/snippets/js2-mode/switch.yasnippet" "/home/aby/fis-command-i18n/i18n1.js" "/home/aby/org/meizu-work/2015/7/20.org" "/home/aby/work/pc-demo/index.php" "/home/aby/work/pc-demo/home/widget/section/section.tpl" "/home/aby/work/pc-demo/home/static/lib/js/html5.js" "/home/aby/work/pc-demo/home/static/index/index.css" "/home/aby/work/pc-demo/home/fis-conf.js" "/usr/local/lib/node_modules/fis/node_modules/fis-kernel/lib/util.js" "/usr/local/lib/node_modules/fis/node_modules/fis-kernel/lib/config.js" "~/demo/app.js" "~/demo/buz.js" "/home/aby/demo/demo6.js" "/home/aby/demo/demo5.js" "/home/aby/fis-command-server-master/server.js" "/home/aby/demo/demo4.js" "/usr/local/lib/node_modules/fis/node_modules/fis-kernel/fis-kernel.js" "/home/aby/org/meizu-work/2015/7/17.org" "/home/aby/org/meizu-work/2015/7/16.org" "/usr/local/lib/node_modules/fis/node_modules/commander/index.js" "/usr/local/lib/node_modules/fis/fis.js" "/home/aby/fis-command-i18n/i18n.js" "/home/aby/fis-command-i18n/.git/COMMIT_EDITMSG" "/home/aby/fis-command-server-master/server.js" "/home/aby/fis/node_modules/commander/index.js" "/home/aby/fis/package.json" "/home/aby/fis/fis.js" "/home/aby/demo/demo3.js" "/home/aby/fis/node_modules/fis-kernel/lib/config.js" "/home/aby/org/meizu-work/2015/7/16.org" "/home/aby/demo/demo2.js" "/home/aby/fis/node_modules/fis-kernel/lib/config.js" "/home/aby/demo/demo.js" "/home/aby/.emacs.d/snippets/js2-mode/fn.yasnippet" "/home/aby/.emacs.d/snippets/js2-mode/fn;" "/home/aby/demo/demo.js" "/home/aby/fis-command-server-master/server.js" "/home/aby/fis/fis.js" "/home/aby/fis/bin/fis" "/home/aby/MeizuDemo2/i18n-www/i18nconfig.json" "/home/aby/fis-command-i18n/i18nconfig.json.bak" "/home/aby/fis-command-i18n/i18nconfig.json" "/home/aby/fis-command-i18n/.git/COMMIT_EDITMSG" "/home/aby/fis-command-server-master/server.js" "/home/aby/fis-command-server-master/LICENSE.md" "/home/aby/org/meizu-work/2015/7/16.org" "/home/aby/fis-command-i18n/config.json" "/home/aby/fis-command-i18n/i18n.js" "/home/aby/fis-command-i18n/config.json" "/home/aby/fis-command-i18n/i18n.js" "~/.emacs.d/ido.last" "~/fis-command-i18n/i18n.js" "~/fis-command-i18n/.jshintrc" "~/fis-command-server-master/server.js" "~/.emacs.d/users/tyan/init.el" "~/.emacs.d/users/aby/init.el" "~/.emacs.d/snippets/js2-mode/switch.yasnippet" "~/MeizuDemo2/i18n-www/config.json" "~/MeizuDemo2/i18n-www/common/page/layout_default.tpl" "~/MeizuDemo2/i18n-www/common/page/index/index.tpl" "~/MeizuDemo2/i18n-www/common/fis-conf.js" "/usr/share/applications/defaults.list" "/sudo:root@localhost:/usr/share/applications/defaults.list" "/usr/share/applications/sublime_text.desktop" "~/MeizuDemo/i18n-www/config.json" "~/MeizuDemo/work.org" "~/MeizuDemo/i18n-www/common/page/index/index.tpl"))
(setq search-ring '("," #("\">" 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t)) "map" "glob" "Reg" "glob" "isDir" " +" "dot" "dotsss" #("3 available  melpa      Predictive abbreviation expansion
  package+           20150319.14" 0 1 (font-lock-face default help-echo #("Version: 20150218.1443" 9 22 (font-lock-face default)) tabulated-list-column-name "Version" tabulated-list-id [cl-struct-package-desc pabbrev (20150218 1443) "Predictive abbreviation expansion" nil single "melpa" nil nil nil] tabulated-list-entry [("pabbrev" face link follow-link t package-desc [cl-struct-package-desc pabbrev (20150218 1443) "Predictive abbreviation expansion" nil single "melpa" nil nil nil] action package-menu-describe-package) #("20150218.1443" 0 13 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face default)) #("Predictive abbreviation expansion" 0 33 (font-lock-face default))]) 1 2 (tabulated-list-column-name "Version" tabulated-list-id [cl-struct-package-desc pabbrev (20150218 1443) "Predictive abbreviation expansion" nil single "melpa" nil nil nil] tabulated-list-entry [("pabbrev" face link follow-link t package-desc [cl-struct-package-desc pabbrev (20150218 1443) "Predictive abbreviation expansion" nil single "melpa" nil nil nil] action package-menu-describe-package) #("20150218.1443" 0 13 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face default)) #("Predictive abbreviation expansion" 0 33 (font-lock-face default))]) 2 11 (font-lock-face default help-echo #("Status: available" 8 17 (font-lock-face default)) tabulated-list-column-name "Status" tabulated-list-id [cl-struct-package-desc pabbrev (20150218 1443) "Predictive abbreviation expansion" nil single "melpa" nil nil nil] tabulated-list-entry [("pabbrev" face link follow-link t package-desc [cl-struct-package-desc pabbrev (20150218 1443) "Predictive abbreviation expansion" nil single "melpa" nil nil nil] action package-menu-describe-package) #("20150218.1443" 0 13 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face default)) #("Predictive abbreviation expansion" 0 33 (font-lock-face default))]) 11 12 (tabulated-list-column-name "Status" tabulated-list-id [cl-struct-package-desc pabbrev (20150218 1443) "Predictive abbreviation expansion" nil single "melpa" nil nil nil] tabulated-list-entry [("pabbrev" face link follow-link t package-desc [cl-struct-package-desc pabbrev (20150218 1443) "Predictive abbreviation expansion" nil single "melpa" nil nil nil] action package-menu-describe-package) #("20150218.1443" 0 13 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face default)) #("Predictive abbreviation expansion" 0 33 (font-lock-face default))]) 12 13 (display (space :align-to 46) tabulated-list-column-name "Status" tabulated-list-id [cl-struct-package-desc pabbrev (20150218 1443) "Predictive abbreviation expansion" nil single "melpa" nil nil nil] tabulated-list-entry [("pabbrev" face link follow-link t package-desc [cl-struct-package-desc pabbrev (20150218 1443) "Predictive abbreviation expansion" nil single "melpa" nil nil nil] action package-menu-describe-package) #("20150218.1443" 0 13 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face default)) #("Predictive abbreviation expansion" 0 33 (font-lock-face default))]) 13 18 (font-lock-face default help-echo #("Archive: melpa" 9 14 (font-lock-face default)) tabulated-list-column-name "Archive" tabulated-list-id [cl-struct-package-desc pabbrev (20150218 1443) "Predictive abbreviation expansion" nil single "melpa" nil nil nil] tabulated-list-entry [("pabbrev" face link follow-link t package-desc [cl-struct-package-desc pabbrev (20150218 1443) "Predictive abbreviation expansion" nil single "melpa" nil nil nil] action package-menu-describe-package) #("20150218.1443" 0 13 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face default)) #("Predictive abbreviation expansion" 0 33 (font-lock-face default))]) 18 19 (tabulated-list-column-name "Archive" tabulated-list-id [cl-struct-package-desc pabbrev (20150218 1443) "Predictive abbreviation expansion" nil single "melpa" nil nil nil] tabulated-list-entry [("pabbrev" face link follow-link t package-desc [cl-struct-package-desc pabbrev (20150218 1443) "Predictive abbreviation expansion" nil single "melpa" nil nil nil] action package-menu-describe-package) #("20150218.1443" 0 13 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face default)) #("Predictive abbreviation expansion" 0 33 (font-lock-face default))]) 19 24 (display (space :align-to 57) tabulated-list-column-name "Archive" tabulated-list-id [cl-struct-package-desc pabbrev (20150218 1443) "Predictive abbreviation expansion" nil single "melpa" nil nil nil] tabulated-list-entry [("pabbrev" face link follow-link t package-desc [cl-struct-package-desc pabbrev (20150218 1443) "Predictive abbreviation expansion" nil single "melpa" nil nil nil] action package-menu-describe-package) #("20150218.1443" 0 13 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face default)) #("Predictive abbreviation expansion" 0 33 (font-lock-face default))]) 24 57 (font-lock-face default help-echo #("Description: Predictive abbreviation expansion" 13 46 (font-lock-face default)) tabulated-list-column-name "Description" tabulated-list-id [cl-struct-package-desc pabbrev (20150218 1443) "Predictive abbreviation expansion" nil single "melpa" nil nil nil] tabulated-list-entry [("pabbrev" face link follow-link t package-desc [cl-struct-package-desc pabbrev (20150218 1443) "Predictive abbreviation expansion" nil single "melpa" nil nil nil] action package-menu-describe-package) #("20150218.1443" 0 13 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face default)) #("Predictive abbreviation expansion" 0 33 (font-lock-face default))]) 57 58 (tabulated-list-id [cl-struct-package-desc pabbrev (20150218 1443) "Predictive abbreviation expansion" nil single "melpa" nil nil nil] tabulated-list-entry [("pabbrev" face link follow-link t package-desc [cl-struct-package-desc pabbrev (20150218 1443) "Predictive abbreviation expansion" nil single "melpa" nil nil nil] action package-menu-describe-package) #("20150218.1443" 0 13 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face default)) #("Predictive abbreviation expansion" 0 33 (font-lock-face default))]) 58 60 (tabulated-list-id [cl-struct-package-desc package+ (20150319 1455) "Extensions for the package library." nil single "melpa" nil ((:url . "TBA") (:keywords "extensions" "tools")) nil] tabulated-list-entry [("package+" face link follow-link t package-desc [cl-struct-package-desc package+ (20150319 1455) "Extensions for the package library." nil single "melpa" nil ((:url . "TBA") (:keywords "extensions" "tools")) nil] action package-menu-describe-package) #("20150319.1455" 0 13 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face default)) #("Extensions for the package library." 0 35 (font-lock-face default))]) 60 68 (button (t) category default-button face link follow-link t package-desc [cl-struct-package-desc package+ (20150319 1455) "Extensions for the package library." nil single "melpa" nil ((:url . "TBA") (:keywords "extensions" "tools")) nil] action package-menu-describe-package tabulated-list-column-name "Package" tabulated-list-id [cl-struct-package-desc package+ (20150319 1455) "Extensions for the package library." nil single "melpa" nil ((:url . "TBA") (:keywords "extensions" "tools")) nil] tabulated-list-entry [("package+" face link follow-link t package-desc [cl-struct-package-desc package+ (20150319 1455) "Extensions for the package library." nil single "melpa" nil ((:url . "TBA") (:keywords "extensions" "tools")) nil] action package-menu-describe-package) #("20150319.1455" 0 13 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face default)) #("Extensions for the package library." 0 35 (font-lock-face default))]) 68 69 (tabulated-list-column-name "Package" tabulated-list-id [cl-struct-package-desc package+ (20150319 1455) "Extensions for the package library." nil single "melpa" nil ((:url . "TBA") (:keywords "extensions" "tools")) nil] tabulated-list-entry [("package+" face link follow-link t package-desc [cl-struct-package-desc package+ (20150319 1455) "Extensions for the package library." nil single "melpa" nil ((:url . "TBA") (:keywords "extensions" "tools")) nil] action package-menu-describe-package) #("20150319.1455" 0 13 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face default)) #("Extensions for the package library." 0 35 (font-lock-face default))]) 69 79 (display (space :align-to 21) tabulated-list-column-name "Package" tabulated-list-id [cl-struct-package-desc package+ (20150319 1455) "Extensions for the package library." nil single "melpa" nil ((:url . "TBA") (:keywords "extensions" "tools")) nil] tabulated-list-entry [("package+" face link follow-link t package-desc [cl-struct-package-desc package+ (20150319 1455) "Extensions for the package library." nil single "melpa" nil ((:url . "TBA") (:keywords "extensions" "tools")) nil] action package-menu-describe-package) #("20150319.1455" 0 13 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face default)) #("Extensions for the package library." 0 35 (font-lock-face default))]) 79 90 (font-lock-face default help-echo #("Version: 20150319.1455" 9 22 (font-lock-face default)) tabulated-list-column-name "Version" tabulated-list-id [cl-struct-package-desc package+ (20150319 1455) "Extensions for the package library." nil single "melpa" nil ((:url . "TBA") (:keywords "extensions" "tools")) nil] tabulated-list-entry [("package+" face link follow-link t package-desc [cl-struct-package-desc package+ (20150319 1455) "Extensions for the package library." nil single "melpa" nil ((:url . "TBA") (:keywords "extensions" "tools")) nil] action package-menu-describe-package) #("20150319.1455" 0 13 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("melpa" 0 5 (font-lock-face default)) #("Extensions for the package library." 0 35 (font-lock-face default))])) "dot" "glob" #("
" 0 1 (fontified t)) "css" "smarty"))
(setq query-replace-history '("phone" "photo" "common_temp" "base_temp" "i18nconfig.json" "config.json" "subl" "gedit"))
(setq ido-buffer-history '("js/index.js" "*Ibuffer*" "*HTTP Response*" "*Ibuffer*" "index.html" "index.scss" "main.scss" "*Compile-Log*" "*Packages*" "*Help*" "*Compile-Log*" "*Packages*" "*Compile-Log*" "*Ibuffer*" "*Messages*" "*Custom Themes*" "*Ibuffer*" "16.org" "*magit: fis-command-i18n*" "*Ibuffer*" "*Packages*" "*Custom Themes*" "init.el" "*Ibuffer*" "switch.yasnippet" "*Packages*" "*Help*" "*Ibuffer*" "*Messages*" "*Custom Themes*"))
(setq minibuffer-history '("log" "sass-mode" "else" "json-mode" "log" "if" "log" "restclient-mode" "if" "<html>...</html>" "web-mode" "revert-buffer" "flymake-jshint-load" "if" "list-packages" "107" "if" "js2-mode" "javascript-mode" "if" "js3-mode" "if" "smarty-mode" "php-mode" "smarty-mode" "list-packages" "revert-buffer" "fold-this-unfold-all" "nodejs-repl" "if" "comment (/* ... */)" "revert-buffer" "speedbar" "flymake-jshint-load" "if" "comment (/* ... */)" "if" "flymake-jshint-load" "if" "list-packages" "revert-buffer" "list-packages" "revert-buffer" "flymake-start-syntax-check" "flycheck-mode" "com" "if" "com" "revert-buffer" "json-mode" "html-mode" "list-packages" "sudo-edit" "if" "html-mode"))
(setq ido-file-history '("lottery.js" "index.html" "index.js" "index.html" "app.js" "lottery.html" "index.html" "gotit.scss" "gotit.html" "timeout.scss" "miss.scss" "timeout.scss" "timeout.html" "lottery.scss" "index.scss" "miss.scss" "miss.html" "lottery.scss" "index.js" "app.js" "index.js" "index.scss" "index.html" "lottery.html" "lottery.scss" "gotit.js" "collection.scss" "miss.html" "index.js" "lottery.html" "lottery.js" "log.yasnippet" "log" "fn;" "session.10b88946934acdd785143339207024531100000027050071" "lottery.js" "lottery.html" "index.js" "index.scss" "index.js" "timeout.scss" "timeout.html" "miss.scss" "miss.html" "lottery.scss" "lottery.html" "collection.scss" "index.scss" "c-if" "html" "collection.html" "index.html" "main.scss" "index.scss" "index.html" "main.scss" "index.scss" "index.html" "package.json" "gulpfile.js" "livereload-target.js" "fis-plus.js" "fis-plus" "fis-plus.js" "package.json" "fis-plus.js" "i18n.js" "server.js" "package.json" "switch.yasnippet" "i18n1.js" "20.org" "index.php" "section.tpl" "html5.js" "index.css" "fis-conf.js" "util.js" "config.js" "demo6.js" "demo5.js" "server.js" "demo4.js" "fis-kernel.js" "17.org" "16.org" "index.js" "fis.js" "i18n.js" "server.js" "index.js" "package.json" "fis.js" "demo3.js" "config.js" "16.org" "config.js" "fn.yasnippet" "fn;" "server.js" "fis.js" "fis" "i18nconfig.json" "i18nconfig.json.bak" "i18nconfig.json" "server.js" "LICENSE.md" "16.org" "config.json" "i18n.js" "config.json" "i18n.js" ".jshintrc" "i18n.js" "init.el" ".emacs.d.zip" "switch.yasnippet" "server.js" "config.json" "layout_default.tpl" "index.tpl" "fis-conf.js" "defaults.list" "config.json" "i18n.js" "work.org" "index.tpl"))
